////////// SUCCEEDED TESTS ///////////


// Valencio:  application run, Database initialization/configuration)

/// 1.1
// Adrian 1.1.1  login POST test – Authenticate Admin or User
// Adrian 1.1.2  login/status GET test – Check Admin Login/Logout Status and Retrieve Name 
// Adrian 1.1.3 & 1.1.4  Admin login and logout status.

// 1.2
// Valencio 1.2.1 READ operation configuration 
// Valencio 1.2.2 Event POST test - Create New Event
// Valencio 1.2.4a Event GEt test - Retrieve list of all events
// Amen 1.2.6 Event -> attach a review
// Jayden 1.2.4B & 1.2.3  Event PUT test, Event DELETE test + all endpoints protected.


//1.3
// Adrian 1.3 Registration

//1.4
// Amen 1.4.1 tm 1.4.4 (Submit Attendance (POST Request), Protected GET Endpoint to View Attendees.)
// Jayden/Amen 1.4.6 Delete Attendance for a Specific Event (DELETE Request)

///////// MISSING/FAILED TESTS /////////

//1.4
// Jayden 1.4.5 Check the availability of the event.

///1.5
// Jayden 1.5.1 
// Valencio 1.5.2/1.5.3 




///////////////////////////////////////////////// SUCCEEDED TESTS BELOW ////////////////////////////////////////////////////



//TRELLO 0.0 (Valencio)
### Application Initialization & Database Test 
GET http://localhost:5097/
###


//TRELLO 1.1.1 (Adrian) 
###login POST test – Authenticate Admin or User (Adrian) 
POST http://localhost:5097/api/v1/Login/Login
Content-Type: application/json

{
  "UserName": "--",
  "Password": "password"
}

###
POST http://localhost:5097/api/v1/Login/UserLogin
content-Type: application/json

{
    "Username": "Aicon",
    "Password": "password"
}
###

///TRELLO 1.1.2  (Adrian)
###⁠login/status GET test – Check Admin Login/Logout Status and Retrieve Name (Adrian)
POST http://localhost:5097/api/v1/Login/Register HTTP/1.1
Content-Type: application/json

{
    "Username":"Aiconn",
    "Email": "user2@example.com",
    "Password":"password",
    "FirstName": "Aicon",
    "LastName": "Yan"
}
###


/// TRELLO 1.1.3 & 1.1.4 (Adrian)
### Admin loggin status
GET http://localhost:5097/api/v1/Login/IsAdminLoggedIn
### User login status
GET http://localhost:5097/api/v1/Login/IsUserLoggedIn
### Admin Logout status 
GET http://localhost:5097/api/v1/Login/AdminLogout
### User Logout status
GET http://localhost:5097/api/v1/Login/UserLogout



// TRELLO  1.2.4A (Valencio)
### Event POST test - POST /events – Create New Event 
POST http://localhost:5097/api/v1/Event/events?sessionId=<session_id>
content-Type: application/json
Authorization: Bearer {jwt_token} 

{
    "Title": "New Event",
    "Description": "This is a new event created for testing purposes.",
    "EventDate": "2024-12-01",
    "StartTime": "10:00:00",
    "EndTime": "12:00:00",
    "Location": "Online"
}

// TRELLO 1.2.6 (Amen)
### Event POST test - POST /events – Add Review To Event
POST http://localhost:5097/api/v1/Event/1/reviews
content-Type: application/json

{
    "EventId": 1,
    "Review": "This event was kind of boring!"
}

// TRELLO 1.1.1 1.2.2 & 1.2.4A (Valencio)
### Events GET test – Retrieve All Events 
GET http://localhost:5097/api/v1/Event/GetAllEvents
Accept: application/json



//  1.2.3/1.2.4B(Jayden) 
### Event PUT test - Update Existing Event
PUT http://localhost:5097/api/v1/Event/UpdateEvent/1
content-Type: application/json
# Authorization: Bearer {jwt_token}

{
    "Title": "Updated Event",
    "Description": "This event has been updated for testing purposes.",
    "EventDate": "2024-12-10",
    "StartTime": "14:00:00",
    "EndTime": "16:00:00",
    "Location": "Main Hall"
}


//  1.2.4B (Jayden)
### Event DELETE test - Delete Event
DELETE http://localhost:5097/api/v1/Event/DeleteEvent/8
# Authorization: Bearer {jwt_token}
###

//1.4.1
### Add attendance for a user to an event
# verander de id's, anders error
POST http://localhost:5097/api/v1/AttendanceModification/AddAttendance
Content-Type: application/json

{
    "eventId": 9,
    "userId" : 2
}


// 1.4.2 
### Get attendees for a specific event
GET http://localhost:5097/api/v1/Event/1/attendees
#Authorization: Bearer {jwt_token}
###


// 1.4.3 
### DELETE attendance for a user to an event
DELETE http://localhost:5097/api/v1/Event/2/attendees/1
#Authorization: Bearer {jwt_token}
###


// 1.2.4
### Delete Attendance for Specific Event
DELETE http://localhost:5097/api/v1/Event/9/specifieke/2
# Authorization: Bearer {jwt_token}
###


//1.4.6
### Delete Attendance
DELETE http://localhost:5097/api/v1/AttendanceModification/DeleteAttendance/8
###

//1.5.1
### Update attendance
PUT http://localhost:5097/api/v1/AttendanceModification/UpdateAttendance
Content-Type: application/json

{
  "EventId": 3,
  "UserId": 2,
  "AttendanceDate": "2024-12-25T09:00:00"
}
###


///////////////////////////////// FAILED TESTS BELOW  ////////////////////////////////////////////////////////////////////////////////////////

//1.4.5
### Get Attendees by Event ID
GET http://localhost:5097/api/v1/Attendance/GetAttendees/100
###