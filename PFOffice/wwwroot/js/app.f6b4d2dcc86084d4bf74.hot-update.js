"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatehello_react_typescript"]("app",{

/***/ "./src/pages/UserPage.tsx":
/*!********************************!*\
  !*** ./src/pages/UserPage.tsx ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst react_router_dom_1 = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router-dom/dist/index.js\");\nconst AccessibilityOptions_1 = __importDefault(__webpack_require__(/*! ./AccessibilityOptions */ \"./src/pages/AccessibilityOptions.tsx\"));\nconst [review, setReview] = (0, react_1.useState)('');\nconst UserPage = () => {\n    const [events, setEvents] = (0, react_1.useState)([]);\n    const [userEvents, setUserEvents] = (0, react_1.useState)([]);\n    const [isAuthenticated, setIsAuthenticated] = (0, react_1.useState)(null);\n    const [selectedEvent, setSelectedEvent] = (0, react_1.useState)(null); // State voor geselecteerd event\n    const [reviewText, setReviewText] = (0, react_1.useState)(''); // Text voor review\n    const navigate = (0, react_router_dom_1.useNavigate)();\n    (0, react_1.useEffect)(() => {\n        checkUserLoggedIn();\n    }, []);\n    const checkUserLoggedIn = async () => {\n        try {\n            const response = await fetch('/api/v1/Login/IsUserLoggedIn', {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\n                },\n            });\n            const data = await response.json();\n            setIsAuthenticated(data);\n            if (!data) {\n                navigate('/');\n            }\n            else {\n                fetchEvents();\n                fetchUserEvents();\n            }\n        }\n        catch (error) {\n            console.error('Error checking user login status:', error);\n            navigate('/');\n        }\n    };\n    const fetchEvents = async () => {\n        try {\n            const response = await fetch('/api/v1/Event/GetAllEvents', {\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n            });\n            const data = await response.json();\n            console.log('API response:', data);\n            if (data && data.$values && Array.isArray(data.$values)) {\n                const now = new Date();\n                const futureEvents = data.$values.filter((event) => {\n                    const eventDateTime = new Date(`${event.eventDate}T${event.startTime}`);\n                    return eventDateTime > now;\n                });\n                console.log('Filtered events:', futureEvents);\n                setEvents(futureEvents);\n            }\n            else {\n                console.error('Unexpected API response format:', data);\n            }\n        }\n        catch (error) {\n            console.error('Error fetching events:', error);\n        }\n    };\n    const fetchUserEvents = async () => {\n        try {\n            const response = await fetch('/api/v1/Event/GetUserEvents', {\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n            });\n            const data = await response.json();\n            if (data && data.$values && Array.isArray(data.$values)) {\n                setUserEvents(data.$values);\n            }\n            else {\n                console.error('Unexpected API response format:', data);\n            }\n        }\n        catch (error) {\n            console.error('Error fetching user events:', error);\n        }\n    };\n    const handleEventClick = (id) => {\n        console.log(`Navigating to event details for event ID: ${id}`);\n        navigate(`/events/${id}`);\n    };\n    const handleWriteReview = (event) => {\n        setSelectedEvent(event); // Stel het geselecteerde event in\n        setReviewText(event.review || ''); // Stel de review in als er al een review is\n    };\n    const handleReviewChange = (event) => {\n        setReviewText(event.target.value); // Update de review tekst\n    };\n    const handleSubmitReview = async () => {\n        if (selectedEvent) {\n            // Verstuur de review naar de server\n            try {\n                const response = await fetch(`/api/v1/Event/AddReview/${selectedEvent.eventId}`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${localStorage.getItem('token')}`,\n                    },\n                    body: JSON.stringify({ review: reviewText }),\n                });\n                const data = await response.json();\n                if (data.success) {\n                    alert('Review submitted successfully!');\n                    // Werk de eventlijst bij door de nieuwe review toe te voegen\n                    setEvents(events.map(event => event.eventId === selectedEvent.eventId ? { ...event, review: reviewText } : event));\n                    setSelectedEvent(null); // Sluit het reviewformulier\n                }\n                else {\n                    alert('Error submitting review');\n                }\n            }\n            catch (error) {\n                console.error('Error submitting review:', error);\n                alert('An error occurred while submitting the review');\n            }\n        }\n    };\n    const handleLogout = () => {\n        console.log('Logging out');\n        localStorage.removeItem('token');\n        navigate('/');\n    };\n    if (isAuthenticated === null) {\n        return (0, jsx_runtime_1.jsx)(\"div\", { children: \"Loading...\" });\n    }\n    return ((0, jsx_runtime_1.jsxs)(\"div\", { children: [(0, jsx_runtime_1.jsx)(\"h1\", { children: \"Events\" }), (0, jsx_runtime_1.jsx)(\"button\", { onClick: handleLogout, children: \"Log Out\" }), (0, jsx_runtime_1.jsxs)(\"div\", { style: { display: 'flex', justifyContent: 'space-between' }, children: [(0, jsx_runtime_1.jsxs)(\"div\", { style: { flex: 1, marginRight: '20px' }, children: [(0, jsx_runtime_1.jsx)(\"h2\", { children: \"All Events\" }), (0, jsx_runtime_1.jsxs)(\"table\", { children: [(0, jsx_runtime_1.jsx)(\"thead\", { children: (0, jsx_runtime_1.jsxs)(\"tr\", { children: [(0, jsx_runtime_1.jsx)(\"th\", { children: \"Title\" }), (0, jsx_runtime_1.jsx)(\"th\", { children: \"Event Date\" }), (0, jsx_runtime_1.jsx)(\"th\", { children: \"Start Time\" }), (0, jsx_runtime_1.jsx)(\"th\", { children: \"End Time\" }), (0, jsx_runtime_1.jsx)(\"th\", { children: \"Actions\" })] }) }), (0, jsx_runtime_1.jsx)(\"tbody\", { children: events.map((event) => ((0, jsx_runtime_1.jsxs)(\"tr\", { children: [(0, jsx_runtime_1.jsx)(\"td\", { children: event.title }), (0, jsx_runtime_1.jsx)(\"td\", { children: new Date(event.eventDate).toLocaleDateString() }), (0, jsx_runtime_1.jsx)(\"td\", { children: event.startTime }), (0, jsx_runtime_1.jsx)(\"td\", { children: event.endTime }), (0, jsx_runtime_1.jsxs)(\"td\", { children: [(0, jsx_runtime_1.jsx)(\"button\", { onClick: () => handleWriteReview(event), children: \"Write Review\" }), \" \"] })] }, event.eventId))) })] })] }), (0, jsx_runtime_1.jsxs)(\"div\", { style: { flex: 1 }, children: [(0, jsx_runtime_1.jsx)(\"h2\", { children: \"Attended Events\" }), (0, jsx_runtime_1.jsxs)(\"table\", { children: [(0, jsx_runtime_1.jsx)(\"thead\", { children: (0, jsx_runtime_1.jsxs)(\"tr\", { children: [(0, jsx_runtime_1.jsx)(\"th\", { children: \"Title\" }), (0, jsx_runtime_1.jsx)(\"th\", { children: \"Event Date\" }), (0, jsx_runtime_1.jsx)(\"th\", { children: \"Start Time\" }), (0, jsx_runtime_1.jsx)(\"th\", { children: \"End Time\" })] }) }), (0, jsx_runtime_1.jsx)(\"tbody\", { children: userEvents.map((event) => ((0, jsx_runtime_1.jsxs)(\"tr\", { children: [(0, jsx_runtime_1.jsx)(\"td\", { children: event.title }), (0, jsx_runtime_1.jsx)(\"td\", { children: new Date(event.eventDate).toLocaleDateString() }), (0, jsx_runtime_1.jsx)(\"td\", { children: event.startTime }), (0, jsx_runtime_1.jsx)(\"td\", { children: event.endTime })] }, event.eventId))) })] })] })] }), selectedEvent && ((0, jsx_runtime_1.jsxs)(\"div\", { children: [(0, jsx_runtime_1.jsxs)(\"h2\", { children: [\"Write Review for \", selectedEvent.title] }), (0, jsx_runtime_1.jsx)(\"textarea\", { value: reviewText, onChange: handleReviewChange, rows: 4, cols: 50, placeholder: \"Write your review here\" }), (0, jsx_runtime_1.jsx)(\"br\", {}), (0, jsx_runtime_1.jsx)(\"button\", { onClick: handleSubmitReview, children: \"Submit Review\" })] })), (0, jsx_runtime_1.jsx)(AccessibilityOptions_1.default, {})] }));\n};\nexports[\"default\"] = UserPage;\n\n\n//# sourceURL=webpack://hello-react-typescript/./src/pages/UserPage.tsx?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("1c792b240aede9d2d3a3")
/******/ })();
/******/ 
/******/ }
);